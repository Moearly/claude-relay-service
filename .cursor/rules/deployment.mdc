---
description: Deployment procedures and server management
---

# 部署和服务器管理

## 服务器信息

### 生产服务器
- **IP**: 156.229.163.86
- **用户**: root
- **密码**: jR74pQyDMTRt*eti7@
- **部署目录**: /opt/claude-relay-service
- **SSH 连接**: `sshpass -p 'jR74pQyDMTRt*eti7@' ssh -o StrictHostKeyChecking=no root@156.229.163.86`

## 后端部署流程

### 方式 1: 直接上传文件
```bash
# 上传单个文件
sshpass -p 'jR74pQyDMTRt*eti7@' scp -o StrictHostKeyChecking=no \
  /local/path/file.js \
  root@156.229.163.86:/opt/claude-relay-service/path/file.js

# 重启服务
sshpass -p 'jR74pQyDMTRt*eti7@' ssh -o StrictHostKeyChecking=no \
  root@156.229.163.86 \
  "cd /opt/claude-relay-service && npm run service:restart"
```

### 方式 2: Git 拉取（如果配置了 Git）
```bash
sshpass -p 'jR74pQyDMTRt*eti7@' ssh -o StrictHostKeyChecking=no \
  root@156.229.163.86 \
  "cd /opt/claude-relay-service && git pull && npm run service:restart"
```

### 服务管理命令
```bash
# 在服务器上执行
cd /opt/claude-relay-service

# 启动服务
npm run service:start:daemon

# 停止服务
npm run service:stop

# 重启服务
npm run service:restart

# 查看状态
npm run service:status

# 查看日志
npm run service:logs

# 实时日志
npm run service:logs:follow
```

### 检查服务进程
```bash
# 查看 Node 进程
ps aux | grep 'node.*app.js' | grep -v grep

# 查看端口占用
netstat -tlnp | grep 3000

# 杀掉进程（如果需要）
pkill -f 'node.*app.js'
```

## 前端部署流程

### Vercel 部署
```bash
cd commercial-website

# 1. 本地构建测试
npm run build

# 2. 部署到生产环境
npx vercel --prod --yes

# 3. 查看部署结果
# 输出会显示 Production URL，例如：
# Production: https://commercial-website-xxx.vercel.app
```

### 部署验证
部署完成后，检查以下内容：
1. 访问生产 URL，确认页面正常加载
2. 检查浏览器控制台，确认没有错误
3. 测试关键功能（登录、API 调用等）

### 常见部署问题

#### 构建失败
```bash
# 查看完整构建日志
npm run build 2>&1 | tail -50

# 检查 TypeScript 错误
npm run build 2>&1 | grep "Type error"
```

#### 部署后 404
- 检查 Vercel 项目设置中的 Framework Preset 是否为 "Next.js"
- 确认 `next.config.js` 配置正确

#### API 调用失败
- 检查 `NEXT_PUBLIC_API_BASE_URL` 环境变量
- 确认后端服务正常运行
- 检查 CORS 配置

## 环境变量管理

### 后端环境变量
文件位置: `/opt/claude-relay-service/.env`

关键变量：
```bash
PORT=3000
CORS_ORIGIN=https://codewith.site,https://www.codewith.site
MONGODB_URI=mongodb://...
REDIS_URL=redis://...
```

### 前端环境变量
在 Vercel 项目设置中配置：
- `NEXT_PUBLIC_API_BASE_URL=https://api.codewith.site`

## 日志查看

### 后端日志
```bash
# SSH 到服务器
sshpass -p 'jR74pQyDMTRt*eti7@' ssh root@156.229.163.86

cd /opt/claude-relay-service

# 查看应用日志
tail -100 logs/app.log

# 查看错误日志
tail -100 logs/service-error.log

# 实时日志
tail -f logs/app.log
```

### 前端日志
在 Vercel 项目页面查看：
1. 访问 Vercel Dashboard
2. 选择项目
3. 点击 "Deployments"
4. 选择部署记录
5. 查看 "Build Logs" 和 "Function Logs"

## 回滚策略

### 后端回滚
```bash
# SSH 到服务器
ssh root@156.229.163.86

cd /opt/claude-relay-service

# 查看备份
ls -la /tmp/backup-*

# 恢复备份
cp -r /tmp/backup-YYYYMMDD_HHMMSS/* .

# 重启服务
npm run service:restart
```

### 前端回滚
在 Vercel Dashboard 中：
1. 找到之前的成功部署
2. 点击 "..." 菜单
3. 选择 "Promote to Production"

## 监控和告警

### 健康检查
```bash
# 检查后端 API
curl https://api.codewith.site/health

# 检查前端
curl https://codewith.site
```

### 服务器资源监控
```bash
# CPU 和内存
top

# 磁盘空间
df -h

# 进程状态
ps aux | grep node
```
